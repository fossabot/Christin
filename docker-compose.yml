version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - 5000:5000
    command: flask run --host 0.0.0.0
    volumes:
      - ./backend:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    environment:
      - FLASK_DEBUG=0
      - CHRISTIN_MYSQL_HOST=39.108.229.166
      - CHRISTIN_MYSQL_PWD=NKKMCDWJFW3CFRwJcA
      - CHRISTIN_MYSQL_PORT=6622
      - CHRISTIN_MYSQL_USER=root
      - APP_SETTINGS=config.production.ProductionConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CHRISTIN_REDIS_HOST=redis
      - CHRISTIN_NEO_HOST=host.docker.internal
    depends_on:
      - redis
    networks:
      - network-frontend
      - network-backend

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery worker --app=application.server.tasks.celery --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./backend:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    environment:
      - FLASK_DEBUG=0
      - CHRISTIN_MYSQL_HOST=39.108.229.166
      - CHRISTIN_MYSQL_PWD=NKKMCDWJFW3CFRwJcA
      - CHRISTIN_MYSQL_PORT=6622
      - CHRISTIN_MYSQL_USER=root
      - APP_SETTINGS=config.production.ProductionConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CHRISTIN_REDIS_HOST=redis
      - CHRISTIN_NEO_HOST=host.docker.internal
    depends_on:
      - backend
      - redis

  # dashboard:
  #   build: .
  #   command: flower --app=application.server.tasks.celery --port=5555 --broker=redis://redis:6379/0
  #   ports:
  #     - 5556:5555
  #   environment:
  #     - FLASK_DEBUG=1
  #     - APP_SETTINGS=config.production.ProductionConfig
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - web
  #     - redis
  #     - worker

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    environment:
      API_URL: "http://backend:5000"
      GOOGLE_TRACKING_ID: ""
    # volumes:
    # - static_volume:/static
    # - media:/media
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - network-frontend

  redis:
    image: redis:6-alpine
    container_name: christin_redis
    ports:
      - 6379:6379

networks:
  network-backend:
  network-frontend:
